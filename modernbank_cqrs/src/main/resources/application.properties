spring.application.name=modernbank-cqrs

server.port = 8084
server.servlet.context-path = /modernbank/cqrs

#postreSQL
spring.datasource.driverClassName = net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url = jdbc:log4jdbc:postgresql://${POSTGRES}/cqrs
spring.datasource.username=${POSTGRES_SERVICE_USER:postgres}
spring.datasource.password=${POSTGRES_SERVICE_PASS:admin1234}
spring.sql.init.encoding=UTF-8
spring.sql.init.mode= always
spring.sql.init.schema-locations= classpath:sql/MODERNBANK_CQRS_DDL.sql    
spring.sql.init.data-locations= classpath:sql/MODERNBANK_CQRS_DML.sql

#mybatis
mybatis.type-aliases-package = com.modernbank.cqrs.domain.entity
mybatis.mapper-locations = classpath:sql/*.xml
mybatis.configuration.map-underscore-to-camel-case = true

#DynamoDB
aws.dynamodb.endpoint=http://localhost:8000
aws.region=ap-northeast-2
# If you use local dynamodb, use bollow key
# But if you use cloud version, please use your accessKey and secretKey
aws.accessKey= accesskey
aws.secretKey= secretKey
#spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#kafka
kafka.bootstrapAddress=${KAFKA}

#subscribe event topic
creating.customer.topic.name=creating-customer
creating.account.topic.name=creating-account
updating.account.balance.topic.name=updating-account-balance
updating.transfer.limit.topic.name=updating-transfer-limit

#### environment ####
ACCOUNT=${ACCOUNT_SERVICE_ADDR:localhost:8081}
B2BT=${B2BT_SERVICE_ADDR:localhost:8082}
CUSTOMER=${CUSTOMER_SERVICE_ADDR:localhost:8083}
CQRS=${CQRS_SERVICE_ADDR:localhost:8084}
TRANSFER=${TRANSFER_SERVICE_ADDR:localhost:8085}
KAFKA=${KAFKA_SERVICE_ADDR:localhost:9092}
POSTGRES=${POSTGRES_SERVICE_ADDR:localhost:5432}