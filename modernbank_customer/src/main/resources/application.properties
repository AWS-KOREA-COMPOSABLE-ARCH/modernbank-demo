spring.application.name=modernbank-customer

server.port = 8083
server.servlet.context-path = /modernbank/customer

#postreSQL
spring.datasource.driverClassName = net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url = jdbc:log4jdbc:postgresql://${POSTGRES}/customer
spring.datasource.username=${POSTGRES_SERVICE_USER:postgres}
spring.datasource.password=${POSTGRES_SERVICE_PASS:admin1234}
spring.sql.init.encoding=UTF-8
spring.sql.init.mode=always 
#always 
spring.sql.init.schema-locations= classpath:sql/MODERNBANK_CUSTOMER_DDL.sql
spring.sql.init.data-locations= classpath:sql/MODERNBANK_CUSTOMER_DML.sql

#mybatis
mybatis.type-aliases-package = com.modernbank.customer.domain.entity
mybatis.mapper-locations = classpath:sql/*.xml
mybatis.configuration.map-underscore-to-camel-case = true

# Accont API URL
account.api.url = http://${ACCOUNT}/modernbank/account
transfer.api.url = http://${TRANSFER}/modernbank/transfer

kafka.bootstrapAddress=${KAFKA}
creating.customer.topic.name=creating-customer
spring.cloud.compatibility-verifier.enabled=false


# Circuit Breaker configurations for transferService
resilience4j.circuitbreaker.instances.transferService.register-health-indicator=true
resilience4j.circuitbreaker.instances.transferService.sliding-window-size=10
resilience4j.circuitbreaker.instances.transferService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.transferService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.transferService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.transferService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.transferService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.transferService.event-consumer-buffer-size=10

# Circuit Breaker configurations for accountService
resilience4j.circuitbreaker.instances.accountService.register-health-indicator=true
resilience4j.circuitbreaker.instances.accountService.sliding-window-size=10
resilience4j.circuitbreaker.instances.accountService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.accountService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.accountService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.accountService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.accountService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.accountService.event-consumer-buffer-size=10

# Retry configurations for transferService
resilience4j.retry.instances.transferService.max-attempts=3
resilience4j.retry.instances.transferService.wait-duration=1s
resilience4j.retry.instances.transferService.enable-exponential-backoff=true
resilience4j.retry.instances.transferService.exponential-backoff-multiplier=2
resilience4j.retry.instances.transferService.retry-exceptions=org.springframework.web.client.RestClientException

# Retry configurations for accountService
resilience4j.retry.instances.accountService.max-attempts=3
resilience4j.retry.instances.accountService.wait-duration=1s
resilience4j.retry.instances.accountService.enable-exponential-backoff=true
resilience4j.retry.instances.accountService.exponential-backoff-multiplier=2
resilience4j.retry.instances.accountService.retry-exceptions=org.springframework.web.client.RestClientException



# application.properties (Spring Boot)
jwt.secret=67EL7cJ0U4OJ1wdqt+2w3Nqvy5HB9wwhx+DMsXMz9aY=
jwt.validate.skip.port=8081,8082,8083,8084,8085

#### environment ####
ACCOUNT=${ACCOUNT_SERVICE_ADDR:localhost:8081}
B2BT=${B2BT_SERVICE_ADDR:localhost:8082}
CUSTOMER=${CUSTOMER_SERVICE_ADDR:localhost:8083}
CQRS=${CQRS_SERVICE_ADDR:localhost:8084}
TRANSFER=${TRANSFER_SERVICE_ADDR:localhost:8085}
KAFKA=${KAFKA_SERVICE_ADDR:localhost:9092}
POSTGRES=${POSTGRES_SERVICE_ADDR:localhost:5432}